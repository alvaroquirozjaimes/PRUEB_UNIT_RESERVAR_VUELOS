<?xml version="1.0" encoding="UTF-8"?>
<!-- Definición del archivo POM (Project Object Model) de Maven -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

    <!-- Especifica la versión del modelo del POM -->
    <modelVersion>4.0.0</modelVersion>

    <!-- Configuración del proyecto "padre" de Spring Boot que hereda configuraciones predeterminadas -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.1.3</version>
        <relativePath/> <!-- Permite buscar el proyecto padre desde el repositorio -->
    </parent>

    <!-- Identificación del proyecto (groupId, artifactId y versión) -->
    <groupId>com.edteam</groupId> <!-- Grupo al que pertenece el proyecto -->
    <artifactId>api-reservations</artifactId> <!-- Identificador único del proyecto -->
    <version>0.0.1-SNAPSHOT</version> <!-- Versión del proyecto en desarrollo (SNAPSHOT indica desarrollo) -->
    <name>api-reservations</name> <!-- Nombre del proyecto -->
    <description>api-reservations</description> <!-- Descripción del proyecto -->

    <!-- Definición de propiedades del proyecto, reutilizables a lo largo del archivo -->
    <properties>
        <java.version>17</java.version> <!-- Versión de Java para compilar -->
        <mapstruct.version>1.5.5.Final</mapstruct.version> <!-- Versión de MapStruct (para mapear objetos) -->
        <springdoc-openapi-starter-webmvc-ui.version>2.1.0</springdoc-openapi-starter-webmvc-ui.version> <!-- Versión de SpringDoc para OpenAPI -->
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version> <!-- Versión del plugin de compilación de Maven -->
        <formatter-maven-plugin.version>2.23.0</formatter-maven-plugin.version> <!-- Versión del plugin para formatear código -->
    </properties>

    <!-- Dependencias necesarias para el proyecto -->
    <dependencies>

        <!-- Dependencia para desarrollar aplicaciones web usando Spring Boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- Procesador de configuraciones de Spring Boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional> <!-- Es opcional para mejorar la configuración del proyecto -->
        </dependency>

        <!-- Dependencia para realizar pruebas con Spring Boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope> <!-- Solo se usa en el ámbito de pruebas -->
        </dependency>

        <!-- Actuador de Spring Boot, que provee monitoreo y métricas para la aplicación -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!-- MapStruct para convertir entre objetos y DTOs (Data Transfer Objects) -->
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${mapstruct.version}</version>
        </dependency>

        <!-- Dependencia para desarrollar aplicaciones web reactivas con Spring WebFlux -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>

        <!-- Programación orientada a aspectos con Spring Boot (AOP) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>

        <!-- SpringDoc para generar documentación OpenAPI de manera automática -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>${springdoc-openapi-starter-webmvc-ui.version}</version>
        </dependency>

        <!-- Sistema de logging con Logback, proporcionado por Spring Boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
        </dependency>

        <!-- Logback en su versión compatible con Java 17 y Spring Boot 3.x -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.4.11</version>
        </dependency>

        <!-- Exclusión de otras implementaciones de SLF4J para evitar conflictos en el logging -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-jdk14</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Conector JDBC para bases de datos MySQL -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.33</version>
        </dependency>

        <!-- Dependencia para trabajar con JPA (Java Persistence API) y bases de datos con Spring Data JPA -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <!-- Validador de datos proporcionado por Spring Boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <!-- Hibernate para gestionar la persistencia de entidades a través de JPA -->
        <dependency>
            <groupId>org.hibernate.orm</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>6.5.3.Final</version>
        </dependency>

        <!-- Anotaciones de JetBrains para ayudar en el desarrollo (como @NotNull, @Nullable) -->
        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations</artifactId>
            <version>RELEASE</version>
            <scope>compile</scope> <!-- Se utiliza en tiempo de compilación -->
        </dependency>

        <!-- Hibernate Core excluyendo algunas dependencias innecesarias como antlr4-runtime -->
        <dependency>
            <groupId>org.hibernate.orm</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>6.5.3.Final</version>
            <exclusions>
                <exclusion>
                    <groupId>org.antlr</groupId>
                    <artifactId>antlr4-runtime</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Dependencias de ANTLR para el procesamiento de lenguajes formales -->
        <dependency>
            <groupId>org.antlr</groupId>
            <artifactId>antlr4-runtime</artifactId>
            <version>4.13.0</version> <!-- Asegúrate de que esta sea la versión correcta -->
        </dependency>
        <dependency>
            <groupId>org.antlr</groupId>
            <artifactId>antlr4</artifactId>
            <version>4.13.0</version> <!-- Asegúrate de que esta sea la misma versión -->
            <scope>compile</scope>
        </dependency>
    </dependencies>

    <!-- Configuración de plugins para el proyecto -->
    <build>
        <plugins>
            <!-- Plugin para formatear el código según las reglas definidas (en este caso, con codificación UTF-8) -->
            <plugin>
                <groupId>net.revelc.code.formatter</groupId>
                <artifactId>formatter-maven-plugin</artifactId>
                <version>${formatter-maven-plugin.version}</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>format</goal> <!-- Objetivo: formatear el código -->
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Plugin de Maven para Spring Boot: empaqueta y ejecuta aplicaciones Spring Boot -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <!-- Plugin de compilación para utilizar Java 17 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${java.version}</source> <!-- Indica que el código fuente usa Java 17 -->
                    <target>${java.version}</target> <!-- Indica que el código compilado será para Java 17 -->
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
